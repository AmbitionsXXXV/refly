/// This is your Prisma schema file,
/// learn more about it in the docs: https:///pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
}

//邮箱
model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  ///头像
  avatar              String?
  ///是否安装了扩展
  extensionInstalled  Boolean   @default(false)
  ///邀请码
  inviteCode          String?   @default(uuid())
  ///邀请人数
  inviteCount         Int       @default(0)
  ///用户名
  name                String?
  ///邮箱
  email               String?   @unique
  ///邮箱是否已验证
  emailVerified       DateTime?
  ///密码
  password            String?
  ///头像
  image               String?
  ///语言偏好列表
  languagePreferences String[]  @default(["English", "Simplified Chinese"])
  ///当前语言环境
  locale              String    @default("en")
  ///禁用的功能列表
  disabledCeatures    String[]
  ///创建时间
  createdAt           DateTime  @default(now())
  ///更新时间
  updatedAt           DateTime  @updatedAt
}

///自定义prompt模型
model CustomPrompt {
  ///id为主键，自动生成，映射到数据库中的_id字段
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  /// 类型
  type           PromptActionType @default(selectionAction)
  ///提示名称
  title          String
  ///提示内容
  content        String
  ///作者id
  authorId       String           @db.ObjectId
  ///是否置顶
  pinned         Boolean          @default(false)
  ///是否直接发送给用户
  directSend     Boolean          @default(false)
  ///图标名称
  iconName       String           @default("iconfont icon-emoji")
  /// 排序位置
  position       Int              @default(0)
  /// 基于系统prompt创建的自定义prompt
  systemPromptId String?          @db.ObjectId
  /// 系统关键字
  systemKey      String?          @unique
  ///创建时间
  createdAt      DateTime         @default(now())
  ///更新时间
  updatedAt      DateTime         @updatedAt
}

///系统提示模型
model SystemPrompt {
  ///id为主键，自动生成，映射到数据库中的_id字段，类型为ObjectId
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  /// 类型
  type       PromptActionType @default(selectionAction)
  //prompt唯一标识
  promptKey  String
  ///提示名称
  title      String
  //分类
  category   String
  ///提示内容
  content    String
  ///是否直接发送给用户
  directSend Boolean
  ///图标名称
  iconName   String
  ///创建时间
  createdAt  DateTime         @default(now())
  ///更新时间
  updatedAt  DateTime         @updatedAt
}

//会话模型
model Conversation {
  ///id为主键，自动生成，映射到数据库中的_id字段，类型为ObjectId
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  ///前端会话id
  conversationId  String   @unique
  ///用户id
  userId          String   @db.ObjectId
  ///会话标题
  title           String
  /// 最后一条聊天记录
  lastMessage     String   @default("")
  /// 消息数量
  messageCount    Int      @default(0)
  /// 会话来源 origin
  origin          String   @default("")
  // 会话来源的 url
  originPageUrl   String   @default("")
  /// 会话来源页面标题
  originPageTitle String   @default("")
  ///创建时间
  createdAt       DateTime @default(now())
  ///更新时间
  updatedAt       DateTime @updatedAt
}

///对话消息
model ChatMessage {
  ///id为主键，自动生成，映射到数据库中的_id字段，类型为ObjectId
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  ///聊天记录 ID
  messageId      String      @unique
  ///会话id
  conversationId String
  ///消息来源
  type           MessageType
  ///用户id
  userId         String      @db.ObjectId
  //内容
  content        String
  // 引用文档来源，以 JSON 方式存储
  sources        String?     @default("")
  ///创建时间
  createdAt      DateTime    @default(now())
  ///更新时间
  updatedAt      DateTime    @updatedAt
}

///web link
model Weblink {
  ///id为主键，自动生成，映射到数据库中的_id字段，类型为ObjectId
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  ///the link id
  linkId      String      @unique
  ///the actual url
  url         String
  ///user id the link belongs to
  userId      String      @db.ObjectId
  //status of indexing
  indexStatus IndexStatus @default(init)
  ///创建时间
  createdAt   DateTime    @default(now())
  ///更新时间
  updatedAt   DateTime    @updatedAt
}

/// 会员信息模型
model VipUser {
  ///id为主键，自动生成，映射到数据库中的_id字段，类型为ObjectId
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  ///用户id
  userId    String      @db.ObjectId
  ///会员类型
  type      VipUserType @default(free)
  ///会员开始时间
  startTime DateTime
  ///会员结束时间
  endTime   DateTime
  ///创建时间
  createdAt DateTime    @default(now())
  ///更新时间
  updatedAt DateTime    @updatedAt
}

//feedback
model ChatFeedback {
  ///id为主键，自动生成，映射到数据库中的_id字段，类型为ObjectId
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  ///用户id
  userId         String   @db.ObjectId
  //会话id
  conversationId String
  ///聊天记录id
  chatItemId     String   @unique
  ///like
  like           Boolean
  ///创建时间
  createdAt      DateTime @default(now())
  ///更新时间
  updatedAt      DateTime @updatedAt
}

enum PromptActionType {
  ///快捷指令
  selectionAction
  ///提示词
  myPrompt
}

enum VipUserType {
  ///免费会员
  free
  ///付费会员
  paid
}

enum IndexStatus {
  init
  processing
  finish
}

enum MessageType {
  ai
  human
  system
}

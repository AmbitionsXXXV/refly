/// This is your Prisma schema file,
/// learn more about it in the docs: https:///pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                BigInt   @id @default(autoincrement()) @db.BigInt
  userId            BigInt   @map("user_id")
  type              String   @map("type")
  provider          String   @map("provider")
  providerAccountId String   @map("provider_account_id")
  refreshToken      String?  @map("refresh_token")
  accessToken       String?  @map("access_token")
  expiresAt         Int?     @map("expires_at")
  scope             String?  @map("scope")
  /// 创建时间
  createdAt         DateTime @default(now()) @map("created_at")
  /// 更新时间
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@unique([provider, providerAccountId])
  @@map("account")
}

//邮箱
model VerificationToken {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  identifier String   @map("identifier")
  token      String   @unique @map("token")
  expires    DateTime @map("expires")

  @@unique([identifier, token])
  @@map("verification_token")
}

model User {
  /// 主键
  id            BigInt    @id @default(autoincrement()) @db.BigInt
  /// 头像
  avatar        String?   @map("avatar")
  /// 用户名
  name          String?   @map("name")
  /// 邮箱
  email         String?   @unique @map("email")
  /// 邮箱是否已验证
  emailVerified DateTime? @map("email_verified")
  /// 密码
  password      String?   @map("password")
  /// 创建时间
  createdAt     DateTime  @default(now()) @map("created_at")
  /// 更新时间
  updatedAt     DateTime  @updatedAt @map("updated_at")

  @@map("user")
}

/// 内容主题
model Topic {
  /// 主键
  id          BigInt   @id @default(autoincrement()) @db.BigInt
  /// 主题 key
  key         String   @unique @map("key")
  /// 多语言名称 JSON 字符串 (key: 语言, val: 名称)
  name        String   @map("name")
  /// 多语言描述 JSON 字符串 (key: 语言, val: 名称)
  description String   @map("description")
  /// 创建时间
  createdAt   DateTime @default(now()) @map("created_at")
  /// 更新时间
  updatedAt   DateTime @updatedAt @map("updated_at")

  userPreferences UserPreference[]

  @@map("topic")
}

/// 用户喜好
model UserPreference {
  /// 主键
  id        BigInt   @id @default(autoincrement()) @db.BigInt
  /// 用户id
  userId    BigInt   @map("user_id")
  /// 主题key
  topicKey  String   @map("topic_key")
  /// 兴趣值
  score     Float    @default(0) @map("score")
  /// 创建时间
  createdAt DateTime @default(now()) @map("created_at")
  /// 更新时间
  updatedAt DateTime @updatedAt @map("updated_at")
  /// 关联的 topic
  topic     Topic?   @relation(fields: [topicKey], references: [key])

  @@unique([userId, topicKey])
  @@index([topicKey])
  @@map("user_preference")
}

// 会话模型
model Conversation {
  /// id为主键
  id              BigInt   @id @default(autoincrement()) @db.BigInt
  /// 用户id
  userId          BigInt   @map("user_id")
  /// 内容 id，指向 aigc_content 中的内容
  contentId       BigInt?  @map("content_id")
  /// 会话标题
  title           String   @map("title")
  /// 最后一条聊天记录
  lastMessage     String   @default("") @map("last_message")
  /// 消息数量
  messageCount    Int      @default(0) @map("message_count")
  /// 会话来源 origin
  origin          String   @default("") @map("origin")
  // 会话来源的 url
  originPageUrl   String   @default("") @map("origin_page_url")
  /// 会话来源页面标题
  originPageTitle String   @default("") @map("origin_page_title")
  /// 创建时间
  createdAt       DateTime @default(now()) @map("created_at")
  /// 更新时间
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@index([userId, updatedAt])
  @@map("conversation")
}

/// 对话消息
model ChatMessage {
  /// id为主键
  id                    BigInt      @id @default(autoincrement()) @db.BigInt
  /// 会话id
  conversationId        BigInt      @map("conversation_id")
  /// 消息来源
  type                  MessageType @map("type")
  /// 用户id
  userId                BigInt      @map("user_id")
  // 内容
  content               String      @map("content")
  // 引用文档来源，以 JSON 方式存储
  sources               String?     @default("") @map("sources")
  /// 创建时间
  createdAt             DateTime    @default(now()) @map("created_at")
  /// 更新时间
  updatedAt             DateTime    @updatedAt @map("updated_at")
  /// 会话选中 Weblink 配置，未来可能会变，先使用 string 保存
  selectedWeblinkConfig String?     @map("selected_weblink_config")

  @@index([conversationId])
  @@map("chat_message")
}

/// 用户访问网页记录
model UserWeblink {
  /// id为主键
  id                    BigInt   @id @default(autoincrement()) @db.BigInt
  /// 关联的链接 id
  weblinkId             BigInt   @map("weblink_id")
  /// 网页链接
  url                   String   @map("url")
  /// 会话来源 origin
  origin                String   @default("") @map("origin")
  /// 用户id
  userId                BigInt   @map("user_id")
  // 会话来源的 url
  originPageUrl         String   @default("") @map("origin_page_url")
  /// 会话来源页面标题
  originPageTitle       String   @default("") @map("origin_page_title")
  /// 会话来源页面的描述
  originPageDescription String   @default("") @map("origin_page_description")
  /// 最近访问时间
  lastVisitTime         DateTime @default(now()) @map("last_visit_time")
  /// 访问次数
  visitTimes            Int      @default(0) @map("visit_times")
  /// 总阅读时长（单位秒）
  totalReadTime         Int      @default(0) @map("total_read_time")
  /// 创建时间
  createdAt             DateTime @default(now()) @map("created_at")
  /// 更新时间
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@unique([userId, url])
  @@map("user_weblink")
}

model Weblink {
  /// id为主键
  id          BigInt      @id @default(autoincrement()) @db.BigInt
  /// 网页链接
  url         String      @unique @map("url")
  /// 页面内容
  pageContent String      @map("page_content")
  /// 页面元数据, JSON 存储
  pageMeta    String      @map("page_meta")
  /// 内容元数据, JSON 存储
  contentMeta String      @map("content_meta")
  /// 索引状态
  indexStatus IndexStatus @default(init) @map("index_status")
  /// 创建时间
  createdAt   DateTime    @default(now()) @map("created_at")
  /// 更新时间
  updatedAt   DateTime    @updatedAt @map("updated_at")

  contents AigcContent[]

  @@map("weblink")
}

/// 生成内容
model AigcContent {
  /// 主键
  id         BigInt            @id @default(autoincrement()) @db.BigInt
  /// 标题
  title      String            @map("title")
  /// 摘要
  abstract   String            @default("") @map("abstract")
  /// 内容
  content    String            @map("content")
  /// 元数据, JSON 存储
  meta       String            @map("meta")
  /// 来源类型
  sourceType ContentSourceType @map("source_type")
  /// 引用文档来源，JSON 字符串
  sources    String?           @default("") @map("sources")
  /// 创建时间
  createdAt  DateTime          @default(now()) @map("created_at")
  /// 更新时间
  updatedAt  DateTime          @updatedAt @map("updated_at")
  /// 关联的链接 id
  weblinkId  BigInt?           @map("weblink_id")
  /// 输入内容 id
  inputIds   BigInt[]          @map("input_ids")
  /// 输出内容 id
  outputIds  BigInt[]          @map("output_ids")

  /// 关联的链接
  weblink     Weblink?      @relation(fields: [weblinkId], references: [id])
  /// 关联的摘要
  userDigests UserDigest[]
  /// 输入内容
  inputs      AigcContent[] @relation("ContentGraph")
  /// 输出内容
  outputs     AigcContent[] @relation("ContentGraph")

  @@index([weblinkId])
  @@map("aigc_content")
}

/// 用户回顾
model UserDigest {
  /// 主键
  id        BigInt      @id @default(autoincrement()) @db.BigInt
  /// 用户 id
  userId    BigInt      @map("user_id")
  /// 日期 (YYYY-MM-DD)
  date      String      @map("date")
  /// 主题
  topicKey  String      @map("topic_key")
  /// 回顾内容 id
  contentId BigInt      @unique @map("content_id")
  /// 创建时间
  createdAt DateTime    @default(now()) @map("created_at")
  /// 更新时间
  updatedAt DateTime    @updatedAt @map("updated_at")
  /// 关联的回顾内容
  content   AigcContent @relation(fields: [contentId], references: [id])

  @@unique([userId, date, topicKey])
  @@map("user_digest")
}

enum ContentSourceType {
  weblink
  digest
  aigc
}

enum ContentMetaType {
  topic
  entity
  form
}

enum IndexStatus {
  init
  processing
  finish
}

enum MessageType {
  ai
  human
  system
}

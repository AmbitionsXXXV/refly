generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int      @id @default(autoincrement())
  userId            Int      @map("user_id")
  type              String   @map("type")
  provider          String   @map("provider")
  providerAccountId String   @map("provider_account_id")
  refreshToken      String?  @map("refresh_token")
  accessToken       String?  @map("access_token")
  expiresAt         Int?     @map("expires_at")
  scope             String?  @map("scope")
  /// 创建时间
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt         DateTime @updatedAt @map("updated_at") @db.Timestamptz()

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

//邮箱
model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String   @map("identifier")
  token      String   @unique @map("token")
  expires    DateTime @map("expires") @db.Timestamptz()

  @@unique([identifier, token])
  @@map("verification_token")
}

model User {
  /// 主键
  id            Int       @id @default(autoincrement())
  /// 头像
  avatar        String?   @map("avatar")
  /// 用户名
  name          String?   @map("name")
  /// 邮箱
  email         String?   @unique @map("email")
  /// 邮箱是否已验证
  emailVerified DateTime? @map("email_verified") @db.Timestamptz()
  /// 密码
  password      String?   @map("password")
  /// 界面语言设置
  uiLocale      String?   @default("") @map("ui_locale")
  /// 输出语言设置
  outputLocale  String?   @default("") @map("output_locale")
  /// 创建时间
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt     DateTime  @updatedAt @map("updated_at") @db.Timestamptz()

  @@map("users")
}

/// 内容主题
model Topic {
  /// 主键
  id          Int      @id @default(autoincrement())
  /// 主题 key
  key         String   @unique @map("key")
  /// 多语言名称 JSON 字符串 (key: 语言, val: 名称)
  name        String   @map("name")
  /// 多语言描述 JSON 字符串 (key: 语言, val: 名称)
  description String   @map("description")
  /// 创建时间
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamptz()

  userPreferences UserPreference[]

  @@map("topics")
}

/// 用户喜好
model UserPreference {
  /// 主键
  id        Int      @id @default(autoincrement())
  /// 用户id
  userId    Int      @map("user_id")
  /// 主题key
  topicKey  String   @map("topic_key")
  /// 兴趣值
  score     Float    @default(0) @map("score")
  /// 创建时间
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()
  /// 关联的 topic
  topic     Topic?   @relation(fields: [topicKey], references: [key])

  @@unique([userId, topicKey])
  @@index([topicKey])
  @@map("user_preferences")
}

// 会话模型
model Conversation {
  /// id为主键
  id              Int      @id @default(autoincrement())
  /// 用户id
  userId          Int      @map("user_id")
  /// 内容 id，指向 aigc_content 中的内容
  contentId       Int?     @map("content_id")
  /// 会话标题
  title           String   @map("title")
  /// 最后一条聊天记录
  lastMessage     String   @default("") @map("last_message")
  /// 消息数量
  messageCount    Int      @default(0) @map("message_count")
  /// 会话来源 origin
  origin          String   @default("") @map("origin")
  // 会话来源的 url
  originPageUrl   String   @default("") @map("origin_page_url")
  /// 会话来源页面标题
  originPageTitle String   @default("") @map("origin_page_title")
  /// 创建时间
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt       DateTime @updatedAt @map("updated_at") @db.Timestamptz()

  messages ChatMessage[]

  @@index([userId, updatedAt])
  @@map("conversations")
}

/// 对话消息
model ChatMessage {
  /// id为主键
  id                    Int         @id @default(autoincrement())
  /// 会话id
  conversationId        Int         @map("conversation_id")
  /// 消息来源
  type                  MessageType @map("type")
  /// 用户id
  userId                Int         @map("user_id")
  /// 内容
  content               String      @map("content")
  /// 引用文档来源，以 JSON 方式存储
  sources               String?     @default("") @map("sources")
  /// 语言设置
  locale                String?     @default("") @map("locale")
  /// 相关问题
  relatedQuestions      String?     @map("related_questions")
  /// 创建时间
  createdAt             DateTime    @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt             DateTime    @updatedAt @map("updated_at") @db.Timestamptz()
  /// 会话选中 Weblink 配置，未来可能会变，先使用 string 保存
  selectedWeblinkConfig String?     @map("selected_weblink_config")

  /// 关联的对话
  conversation Conversation @relation(fields: [conversationId], references: [id])

  @@index([conversationId])
  @@map("chat_messages")
}

/// 用户访问网页记录
model UserWeblink {
  /// id为主键
  id                    Int      @id @default(autoincrement())
  /// 关联的链接 id
  weblinkId             Int      @map("weblink_id")
  /// 网页链接
  url                   String   @map("url")
  /// 会话来源 origin
  origin                String   @default("") @map("origin")
  /// 用户id
  userId                Int      @map("user_id")
  // 会话来源的 url
  originPageUrl         String   @default("") @map("origin_page_url")
  /// 会话来源页面标题
  originPageTitle       String   @default("") @map("origin_page_title")
  /// 会话来源页面的描述
  originPageDescription String   @default("") @map("origin_page_description")
  /// 最近访问时间
  lastVisitTime         DateTime @default(now()) @map("last_visit_time") @db.Timestamptz()
  /// 访问次数
  visitTimes            Int      @default(0) @map("visit_times")
  /// 总阅读时长（单位秒）
  totalReadTime         Int      @default(0) @map("total_read_time")
  /// 创建时间
  createdAt             DateTime @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt             DateTime @updatedAt @map("updated_at") @db.Timestamptz()

  @@unique([userId, url])
  @@map("user_weblinks")
}

model Weblink {
  /// id为主键
  id          Int         @id @default(autoincrement())
  /// 网页链接
  url         String      @unique @map("url")
  /// 页面内容 (deprecated)
  pageContent String      @map("page_content")
  /// 对象存储 key
  storageKey  String      @default("") @map("storage_key")
  /// 页面元数据, JSON 存储
  pageMeta    String      @map("page_meta")
  /// 内容元数据, JSON 存储
  contentMeta String      @map("content_meta")
  /// 索引状态
  indexStatus IndexStatus @default(init) @map("index_status")
  /// 创建时间
  createdAt   DateTime    @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt   DateTime    @updatedAt @map("updated_at") @db.Timestamptz()

  contents AigcContent[]

  @@map("weblinks")
}

model WeblinkUserMark {
  /// id为主键
  id               Int      @id @default(autoincrement())
  /// 网页 id
  weblinkId        Int      @map("weblink_id")
  /// 用户 id
  userId           Int      @map("user_id")
  /// 网页 host
  linkHost         String   @map("link_host")
  /// 选中元素
  selector         String   @map("selector")
  /// 插件版本
  extensionVersion String   @map("extension_version")
  /// 标记类型
  markType         String   @map("mark_type")
  /// 创建时间
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt        DateTime @updatedAt @map("updated_at") @db.Timestamptz()

  @@index([weblinkId, userId])
  @@index([weblinkId, selector])
  @@map("weblink_user_marks")
}

/// 生成内容
model AigcContent {
  /// 主键
  id         Int               @id @default(autoincrement())
  /// 标题
  title      String            @map("title")
  /// 摘要
  abstract   String            @default("") @map("abstract")
  /// 内容
  content    String            @map("content")
  /// 元数据, JSON 存储
  meta       String            @map("meta")
  /// 来源类型
  sourceType ContentSourceType @map("source_type")
  /// 引用文档来源，JSON 字符串
  sources    String?           @default("") @map("sources")
  /// 创建时间
  createdAt  DateTime          @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt  DateTime          @updatedAt @map("updated_at") @db.Timestamptz()
  /// 关联的链接 id
  weblinkId  Int?              @map("weblink_id")
  /// 输入内容 id
  inputIds   Int[]             @map("input_ids")
  /// 输出内容 id
  outputIds  Int[]             @map("output_ids")

  /// 关联的链接
  weblink     Weblink?      @relation(fields: [weblinkId], references: [id])
  /// 关联的摘要
  userDigests UserDigest[]
  /// 输入内容
  inputs      AigcContent[] @relation("content_graph")
  /// 输出内容
  outputs     AigcContent[] @relation("content_graph")

  @@index([weblinkId])
  @@map("aigc_contents")
}

/// 用户回顾
model UserDigest {
  /// 主键
  id        Int         @id @default(autoincrement())
  /// 用户 id
  userId    Int         @map("user_id")
  /// 日期 (YYYY-MM-DD)
  date      String      @map("date")
  /// 主题
  topicKey  String      @map("topic_key")
  /// 回顾内容 id
  contentId Int         @unique @map("content_id")
  /// 创建时间
  createdAt DateTime    @default(now()) @map("created_at") @db.Timestamptz()
  /// 更新时间
  updatedAt DateTime    @updatedAt @map("updated_at") @db.Timestamptz()
  /// 关联的回顾内容
  content   AigcContent @relation(fields: [contentId], references: [id])

  // @@unique([userId, date, topicKey])
  @@map("user_digests")
}

/// 内容向量
model ContentVector {
  /// 主键
  id        String                 @id @default(cuid())
  /// 网页 id
  weblinkId Int                    @map("weblink_id")
  /// 内容
  content   String                 @map("content")
  /// 向量
  vector    Unsupported("vector")? @map("vector")

  @@index([weblinkId])
  @@map("content_vectors")
}

enum ContentSourceType {
  weblink
  digest
  aigc
}

enum ContentMetaType {
  topic
  entity
  form
}

enum IndexStatus {
  init
  processing
  finish
}

enum MessageType {
  ai
  human
  system
}

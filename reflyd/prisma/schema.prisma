/// This is your Prisma schema file,
/// learn more about it in the docs: https:///pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  userId            String    @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  scope             String?
  /// 创建时间
  createdAt         DateTime? @default(now())
  /// 更新时间
  updatedAt         DateTime? @updatedAt

  @@unique([provider, providerAccountId])
}

//邮箱
model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  /// 主键
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  /// 头像
  avatar        String?
  /// 用户名
  name          String?
  /// 邮箱
  email         String?   @unique
  /// 邮箱是否已验证
  emailVerified DateTime?
  /// 密码
  password      String?
  /// 创建时间
  createdAt     DateTime  @default(now())
  /// 更新时间
  updatedAt     DateTime  @updatedAt
}

/// (暂不需要) 内容主题
model Topic {
  /// 主键
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  /// 主题 key
  key               String
  /// 多语言名称 JSON 字符串 (key: 语言, val: 名称)
  localeName        String
  /// 多语言描述 JSON 字符串 (key: 语言, val: 名称)
  localeDescription String
  /// 创建时间
  createdAt         DateTime @default(now())
  /// 更新时间
  updatedAt         DateTime @updatedAt
}

/// 用户喜好
model UserPreference {
  /// 主键
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  /// 用户id
  userId    String   @db.ObjectId
  /// 主题key
  topicKey  String
  /// 兴趣值
  score     Int      @default(0)
  /// 创建时间
  createdAt DateTime @default(now())
  /// 更新时间
  updatedAt DateTime @updatedAt

  @@unique([userId, topicKey])
  @@index([topicKey])
}

// 会话模型
model Conversation {
  /// id为主键
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  /// 用户id
  userId          String   @db.ObjectId
  /// 内容 id，指向 aigc_content 中的内容
  contentId       String?  @db.ObjectId
  /// 会话标题
  title           String
  /// 最后一条聊天记录
  lastMessage     String   @default("")
  /// 消息数量
  messageCount    Int      @default(0)
  /// 会话来源 origin
  origin          String   @default("")
  // 会话来源的 url
  originPageUrl   String   @default("")
  /// 会话来源页面标题
  originPageTitle String   @default("")
  /// 创建时间
  createdAt       DateTime @default(now())
  /// 更新时间
  updatedAt       DateTime @updatedAt

  @@index([userId, updatedAt])
}

/// 对话消息
model ChatMessage {
  /// id为主键
  id                    String      @id @default(auto()) @map("_id") @db.ObjectId
  /// 会话id
  conversationId        String      @db.ObjectId
  /// 消息来源
  type                  MessageType
  /// 用户id
  userId                String      @db.ObjectId
  // 内容
  content               String
  // 引用文档来源，以 JSON 方式存储
  sources               String?     @default("")
  /// 创建时间
  createdAt             DateTime    @default(now())
  /// 更新时间
  updatedAt             DateTime    @updatedAt
  /// 会话选中 Weblink 配置，未来可能会变，先使用 string 保存
  selectedWeblinkConfig String?

  @@index([conversationId])
}

/// 用户访问网页记录
model UserWeblink {
  /// id为主键
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  /// 关联的链接 id
  weblinkId             String   @db.ObjectId
  /// 网页链接
  url                   String
  /// 会话来源 origin
  origin                String   @default("")
  /// 用户id
  userId                String   @db.ObjectId
  // 会话来源的 url
  originPageUrl         String   @default("")
  /// 会话来源页面标题
  originPageTitle       String   @default("")
  /// 会话来源页面的描述
  originPageDescription String   @default("")
  /// 最近访问时间
  lastVisitTime         DateTime @default(now())
  /// 访问次数
  visitTimes            Int      @default(0)
  /// 总阅读时长（单位秒）
  totalReadTime         Int      @default(0)
  /// 创建时间
  createdAt             DateTime @default(now())
  /// 更新时间
  updatedAt             DateTime @updatedAt

  @@unique([userId, url])
}

model Weblink {
  /// id为主键
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  /// 网页链接
  url         String      @unique
  /// 页面内容
  pageContent String
  /// 页面元数据, JSON 存储
  pageMeta    String
  /// 内容元数据, JSON 存储
  contentMeta String
  /// 索引状态
  indexStatus IndexStatus @default(init)
  /// 创建时间
  createdAt   DateTime    @default(now())
  /// 更新时间
  updatedAt   DateTime    @updatedAt

  contents AIGCContent[]
}

/// 网页元数据 (待确定)
model WeblinkMeta {
  /// 主键
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  /// 链接 id
  linkId    String          @db.ObjectId
  /// 元数据类型
  metaType  ContentMetaType
  /// 元数据值
  metaVal   String
  /// 打标分数 (0-100)
  score     Int
  /// 创建时间
  createdAt DateTime        @default(now())
  /// 更新时间
  updatedAt DateTime        @updatedAt

  @@unique([linkId, metaType, metaVal])
}

/// 生成内容
model AIGCContent {
  /// 主键
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  /// 标题
  title       String
  /// 内容
  content     String
  /// 元数据, JSON 存储
  meta        String
  /// 来源类型
  sourceType  ContentSourceType
  /// 引用文档来源，JSON 字符串
  sources     String?           @default("")
  /// 创建时间
  createdAt   DateTime          @default(now())
  /// 更新时间
  updatedAt   DateTime          @updatedAt
  /// 关联的链接 id
  weblinkId   String?           @db.ObjectId
  /// 关联的链接
  weblink     Weblink?          @relation(fields: [weblinkId], references: [id])
  /// 关联的摘要
  userDigests UserDigest[]

  @@index([weblinkId])
}

/// 用户推荐内容
model UserFeed {
  /// 主键
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  /// 用户 id
  userId    String   @db.ObjectId
  /// 内容 id
  contentId String   @db.ObjectId
  /// 创建时间
  createdAt DateTime @default(now())
  /// 更新时间
  updatedAt DateTime @updatedAt

  @@index([userId, updatedAt])
}

/// 用户回顾
model UserDigest {
  /// 主键
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  /// 用户 id
  userId     String      @db.ObjectId
  /// 日期 (YYYY-MM-DD)
  date       String
  /// 主题
  topicKey   String
  /// 回顾内容 id
  contentId  String      @unique @db.ObjectId
  /// 创建时间
  createdAt  DateTime    @default(now())
  /// 更新时间
  updatedAt  DateTime    @updatedAt
  /// 关联的链接 id
  weblinkIds String[]    @db.ObjectId
  /// 关联的回顾内容
  content    AIGCContent @relation(fields: [contentId], references: [id])

  @@unique([userId, date, topicKey])
}

enum ContentSourceType {
  weblink
  digest
  aigc
}

enum ContentMetaType {
  topic
  entity
  form
}

enum IndexStatus {
  init
  processing
  finish
}

enum MessageType {
  ai
  human
  system
}

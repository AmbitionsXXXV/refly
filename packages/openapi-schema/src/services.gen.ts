// This file is auto-generated by @hey-api/openapi-ts

import { client, type Options } from '@hey-api/client-fetch';
import type {
  ListResourcesData,
  ListResourcesError,
  ListResourcesResponse,
  GetResourceDetailData,
  GetResourceDetailError,
  GetResourceDetailResponse2,
  UpdateResourceData,
  UpdateResourceError,
  UpdateResourceResponse,
  CreateResourceData,
  CreateResourceError,
  CreateResourceResponse,
  DeleteResourceData,
  DeleteResourceError,
  DeleteResourceResponse,
  ListCollectionsData,
  ListCollectionsError,
  ListCollectionsResponse,
  GetCollectionDetailData,
  GetCollectionDetailError,
  GetCollectionDetailResponse2,
  UpdateCollectionData,
  UpdateCollectionError,
  UpdateCollectionResponse,
  CreateCollectionData,
  CreateCollectionError,
  CreateCollectionResponse,
  DeleteCollectionData,
  DeleteCollectionError,
  DeleteCollectionResponse,
  ListConversationsError,
  ListConversationsResponse,
  CreateConversationData,
  CreateConversationError,
  CreateConversationResponse2,
  GetConversationData,
  GetConversationError,
  GetConversationResponse,
  GetSettingsError,
  GetSettingsResponse,
  UpdateSettingsData,
  UpdateSettingsError,
  UpdateSettingsResponse,
} from './types.gen';

/**
 * List resources
 * List all resources
 */
export const listResources = (options?: Options<ListResourcesData>) => {
  return (options?.client ?? client).get<ListResourcesResponse, ListResourcesError>({
    ...options,
    url: '/knowledge/resource/list',
  });
};

/**
 * Get resource detail
 * Return resource detail along with its document content
 */
export const getResourceDetail = (options: Options<GetResourceDetailData>) => {
  return (options?.client ?? client).get<GetResourceDetailResponse2, GetResourceDetailError>({
    ...options,
    url: '/knowledge/resource/detail',
  });
};

/**
 * Update resource
 * Update an existing resource
 */
export const updateResource = (options: Options<UpdateResourceData>) => {
  return (options?.client ?? client).post<UpdateResourceResponse, UpdateResourceError>({
    ...options,
    url: '/knowledge/resource/update',
  });
};

/**
 * Create new resource
 * Create a new resource
 */
export const createResource = (options: Options<CreateResourceData>) => {
  return (options?.client ?? client).post<CreateResourceResponse, CreateResourceError>({
    ...options,
    url: '/knowledge/resource/new',
  });
};

/**
 * Delete resource
 * Delete an existing resource
 */
export const deleteResource = (options: Options<DeleteResourceData>) => {
  return (options?.client ?? client).post<DeleteResourceResponse, DeleteResourceError>({
    ...options,
    url: '/knowledge/resource/delete',
  });
};

/**
 * List user collections
 * List all collections for a user
 */
export const listCollections = (options?: Options<ListCollectionsData>) => {
  return (options?.client ?? client).get<ListCollectionsResponse, ListCollectionsError>({
    ...options,
    url: '/knowledge/collection/list',
  });
};

/**
 * Get collection detail
 * Return collection details along with its resources
 */
export const getCollectionDetail = (options: Options<GetCollectionDetailData>) => {
  return (options?.client ?? client).get<GetCollectionDetailResponse2, GetCollectionDetailError>({
    ...options,
    url: '/knowledge/collection/detail',
  });
};

/**
 * Update collection
 * Update an existing collection
 */
export const updateCollection = (options: Options<UpdateCollectionData>) => {
  return (options?.client ?? client).post<UpdateCollectionResponse, UpdateCollectionError>({
    ...options,
    url: '/knowledge/collection/update',
  });
};

/**
 * Create new collection
 * Create a new collection
 */
export const createCollection = (options: Options<CreateCollectionData>) => {
  return (options?.client ?? client).post<CreateCollectionResponse, CreateCollectionError>({
    ...options,
    url: '/knowledge/collection/new',
  });
};

/**
 * Delete collection
 * Delete an existing collection
 */
export const deleteCollection = (options: Options<DeleteCollectionData>) => {
  return (options?.client ?? client).post<DeleteCollectionResponse, DeleteCollectionError>({
    ...options,
    url: '/knowledge/collection/delete',
  });
};

/**
 * List conversations
 * List all conversations
 */
export const listConversations = (options?: Options) => {
  return (options?.client ?? client).get<ListConversationsResponse, ListConversationsError>({
    ...options,
    url: '/conversation/list',
  });
};

/**
 * Create new conversation
 * Create a new conversation
 */
export const createConversation = (options: Options<CreateConversationData>) => {
  return (options?.client ?? client).post<CreateConversationResponse2, CreateConversationError>({
    ...options,
    url: '/conversation/new',
  });
};

/**
 * Get conversation
 * Get conversation detail
 */
export const getConversation = (options: Options<GetConversationData>) => {
  return (options?.client ?? client).get<GetConversationResponse, GetConversationError>({
    ...options,
    url: '/conversation/{convId}',
  });
};

/**
 * Get user settings
 * Return settings for current user
 */
export const getSettings = (options?: Options) => {
  return (options?.client ?? client).get<GetSettingsResponse, GetSettingsError>({
    ...options,
    url: '/user/settings',
  });
};

/**
 * Update user settings
 * Update settings for current user
 */
export const updateSettings = (options: Options<UpdateSettingsData>) => {
  return (options?.client ?? client).put<UpdateSettingsResponse, UpdateSettingsError>({
    ...options,
    url: '/user/settings',
  });
};

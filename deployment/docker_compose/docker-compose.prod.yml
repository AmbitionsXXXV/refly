version: "3"
services:
  reflyd:
    image: reflyd:latest
    build:
      context: ../../reflyd
      dockerfile: Dockerfile
    command: >
      node dist/main.js
    depends_on:
      - db
      - redis
      - qdrant
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=mongodb://db:27017/refly
      - QDRANT_URL=qdrant:6333
  db:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - db_volume:/var/lib/postgresql/data
    restart: always
  redis:
    image: redis/redis-stack:latest
    restart: always
    volumes:
      - kv_volume:/var/lib/postgresql/data
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    env_file:
      - .env
    volumes:
      - vector_volume:/var/lib/postgresql/data
  # This container name cannot have an underscore in it due to Vespa expectations of the URL
  nginx:
    image: nginx:1.23.4-alpine
    restart: always
    depends_on:
      - reflyd
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../data/nginx:/etc/nginx/conf.d
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    # the specified script waits for the api_server to start up.
    # Without this we've seen issues where nginx shows no error logs but
    # does not recieve any traffic
    # NOTE: we have to use dos2unix to remove Carriage Return chars from the file
    # in order to make this work on both Unix-like systems and windows
    command: >
      /bin/sh -c "dos2unix /etc/nginx/conf.d/run-nginx.sh 
      && /etc/nginx/conf.d/run-nginx.sh app.conf.template"
    env_file:
      - .env.nginx
  # follows https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  local_dynamic_storage:
  file_connector_tmp_storage: # used to store files uploaded by the user temporarily while we are indexing them
  db_volume:
  vespa_volume:
